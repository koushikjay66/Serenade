name: Build, Deploy and Publish the Application

on:
  push:
    branches: [ "feature/ci-cd" ]

env:
    ARTIFACTORY_IMAGE_TAG: ${{ github.sha }}  


permissions:
  contents: read

jobs:

  # approval:
  #   name: Manually Approve 
  #   runs-on : ubuntu-latest
    
  #   if: ${{startsWith(github.ref, vars.PROTECTED_BRANCH) }}
  #   steps:

  #     - uses: trstringer/manual-approval@v1
  #       with:
  #             secret: ${{ github.TOKEN }}
  #             approvers: ${{ vars.ADMIN_GROUP }} 
  #             minimum-approvals: 1
  #             issue-title: "Approve Release for Production ?"
  #             issue-body: "Please approve or deny the deployment"
  #             exclude-workflow-initiator-as-approver: false
  #             additional-approved-words: ''
  #             additional-denied-words: ''
  
  
    Build:
        name: Building Images
        runs-on: ubuntu-latest
        #needs: [approval]

        steps:
        - name: Checkout
          uses: actions/checkout@v4

        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v3
        - name: Build and export
          uses: docker/build-push-action@v5
          with:
            context: .
            tags: ${{ env.ARTIFACTORY_IMAGE_TAG }}:latest
            outputs: type=docker,dest=/tmp/${{ vars.ECR_REPOSITORY }}.tar
        - name: Upload artifact
          uses: actions/upload-artifact@v3
          with:
            name: serenade
            path: /tmp/${{ vars.ECR_REPOSITORY }}.tar
    publish: 
      name: Publish Image to ECR
      runs-on : ubuntu-latest
      needs: [Build]
      steps:
          - name: Configure AWS credentials
            uses: aws-actions/configure-aws-credentials@v1
            with:
              aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
              aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
              aws-region: ${{ secrets.AWS_REGION }}

          - name: Login to Amazon ECR
            id: login-ecr
            uses: aws-actions/amazon-ecr-login@v1
          - name: Download artifact
            uses: actions/download-artifact@v3
            with:
              name: serenade
              path: /tmp
          - name: Load image
            run: |
              docker load --input /tmp/${{ vars.ECR_REPOSITORY }}.tar
              docker tag ${{ env.ARTIFACTORY_IMAGE_TAG }} ${{ steps.login-ecr.outputs.registry}}/${{ vars.ECR_REPOSITORY }}:latest


          - name: Publishing to ECR
            id: push-image
            run: | 
                docker push ${{ steps.login-ecr.outputs.registry }}/${{ vars.ECR_REPOSITORY }}:latest
                echo "image=${{ steps.login-ecr.outputs.registry }}/${{ vars.ECR_REPOSITORY }}"  >> "$GITHUB_OUTPUT"

    trigger-next-workflow:
                    needs: publish
                    runs-on: ubuntu-latest
                    steps:
                      - name: Trigger Next Workflow
                        run: |
                          curl -X POST \
                          -H "Accept: application/vnd.github.v3+json" \
                          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/repos/${{ github.repository }}/actions/workflows/prod_deploy.yaml/dispatches \
                          -d '{"ref":"main"}'
  
  